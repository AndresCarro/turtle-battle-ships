version: '3.9'

services:
  postgres:
    image: postgres:17-alpine
    env_file: './.env'
    ports:
      - '127.0.0.1:${DB_PORT}:5432'
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${DB_USER}', '-d', '${DB_NAME}']
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  bucket:
    image: minio/minio:RELEASE.2025-05-24T17-08-30Z
    env_file: './.env'
    command: server /data --console-address ":${ADMIN_PORT}"
    ports:
      - '127.0.0.1:${BUCKET_PORT}:9000'
      - '127.0.0.1:${ADMIN_PORT}:9001'
    environment:
      MINIO_ROOT_USER: ${BUCKET_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${BUCKET_SECRET_ACCESS_KEY}
    volumes:
      - bucket_data:/data
    healthcheck:
      test:
        [
          'CMD',
          'bash',
          '-c',
          "timeout 5s bash -c '</dev/tcp/127.0.0.1/9000' || exit 1",
        ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  bucket-init:
    image: minio/mc:RELEASE.2025-05-21T01-59-54Z
    depends_on:
      - bucket
    entrypoint: ['/bin/sh', '-c']
    command: |
      "until mc alias set myminio http://bucket:9000 ${BUCKET_ACCESS_KEY} ${BUCKET_SECRET_ACCESS_KEY}; do sleep 1; done && \
       mc mb --ignore-existing myminio/${BUCKET_NAME} && \
       mc policy set public myminio/${BUCKET_NAME}"
    restart: on-failure

  dynamo:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb-local
    ports:
      - '127.0.0.1:${DYNAMO_PORT:-8000}:8000'
    command: '-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data'
    volumes:
      - ./dynamo_data:/home/dynamodblocal/data
    restart: unless-stopped

volumes:
  postgres_data:
  bucket_data:
  dynamo_data:
